# Creates container.
docker-swapi: 
	docker run -d -p 27017-27019:27017-27019 --name swapi mongo

# Starts container.
docker-start:
	docker start swapi

# Stops container.
docker-stop:
	docker stop swapi

# Removes container.
docker-rm:
	docker rm swapi

# Stops and removes the docker container.
docker-clean: docker-stop docker-rm

# Gets dependacies.
install-json-to-go:
	curl "https://raw.githubusercontent.com/areThereAnyUserNamesLeft/json-to-go/master/json-to-go.js" --output "json-to-go.js" ; 
	sed -i "s/function jsonToGo(json, typename, flatten = true)/function jsonToGo(json, typename, flatten = false)/g" "json-to-go.js"; \

# Grabs the data from a fork of the Swapi api.
fetch-data:
	for V in films people planets species starships vehicles ; do \
	curl "https://raw.githubusercontent.com/areThereAnyUserNamesLeft/swapi/master/resources/fixtures/$$V.json" --output "database/data/$$V.json" ; \
	done; 

# Runs data through the json-to-go script to convert the json to valid go structs 
# and then adds bson tags and imports so that the structs can be used by mongo and compile.
convert-data:
	for V in films people planets species starships vehicles ; do \
	echo -e 'package structs\n import "time"' > "database/structs/$$V.go"; \
	cat "database/data/$$V.json" | node json-to-go.js >> "database/structs/$$V.go"; \
	sed -i "s/AutoGenerated/\u$$V/g" "database/structs/$$V.go"; \
	sed -ri 's/`json:"(.*)"`/`json:"\1" bson:"\1"`/'  "database/structs/$$V.go"; \
	go fmt "database/structs/$$V.go"; \
	done; 

# Removes an unused golang import from two of the structs to prevent a compile time.	
clean-time:
	sed -i 's/import "time"//g' "database/structs/vehicles.go"; \
	sed -i 's/import "time"//g' "database/structs/starships.go"; \
	go fmt "database/structs/vehicles.go" "database/structs/starships.go" \

# Clears the data and structs. 	
clean-data:
	rm -f database/data/*.json
	rm -f database/structs/*.go

# Refreshes only the data and types.
refresh-data: clean-data fetch-data convert-data clean-time

# Populates data into a running docker. 
run:
	go run main.go

# Grabs clean data from github.
refresh-run: refresh-data run 

# Runs everything but does not fetch new dependencies.
clean-restart: refresh-data docker-clean docker-swapi run

# Runs a fresh set of everything.
fresh-run: install-json-to-go clean-restart  
 
